{"version":3,"file":"static/js/795.b7820cb9.chunk.js","mappings":"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","sources":["components/CastMovies/CastMovies.jsx","hooks/useHttp.jsx","services/movies-api.js"],"sourcesContent":["import { useHttp } from 'hooks/useHttp';\n// import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCast } from 'services/movies-api';\n\nconst CastMovies = () => {\n  const { movieId } = useParams();\n\n  const [cast] = useHttp(fetchMoviesCast, movieId);\n  // const [cast, setCast] = useState([]);\n\n  // useEffect(() => {\n  //   if (movieId) {\n  //     fetchMoviesCast(movieId)\n  //       .then(res => setCast(res))\n  //       .catch(error => {\n  //         console.error('Error fetching movie details:', error);\n  //         setCast([]);\n  //       });\n  //   }\n  // }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {cast?.length > 0 ? (\n          cast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  width=\"120\"\n                  alt={name}\n                />\n              ) : (\n                <span>No image available</span>\n              )}\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))\n        ) : (\n          <li>No cast available</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default CastMovies;\n","import { useEffect, useState } from 'react';\n// import { fetchMoviesId } from 'services/movies-api';\n\nexport const useHttp = (fetchFn, params) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState([]);\n  useEffect(() => {\n    if (params) {\n      fetchFn(params)\n        .then(data => setData(data))\n        .catch(error => {\n          setError(error.message);\n          setData([]);\n        });\n    }\n  }, [params, fetchFn]);\n\n  return [data, setData, error];\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\n\nexport const fetchMoviesTrend = async () => {\n  const { data } = await axios.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // console.log(data);\n  return data.results;\n};\n\nexport const fetchMoviesId = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // console.log(data);\n  return data;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // console.log(data);\n  return data.results;\n};\n\nexport const fetchMoviesCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // console.log(data);\n  return data.cast;\n};\n\nexport const fetchMoviesBySearch = async inputValue => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: inputValue,\n    },\n  });\n  // console.log(data);\n  return data.results;\n};\n"],"names":["movieId","useParams","_useHttp","useHttp","fetchMoviesCast","cast","_slicedToArray","_jsx","children","length","map","_ref","id","profile_path","name","character","_jsxs","src","concat","width","alt","fetchFn","params","_useState","useState","_useState2","data","setData","_useState3","_useState4","error","setError","useEffect","then","catch","message","axios","API_KEY","fetchMoviesTrend","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","api_key","sent","abrupt","results","stop","apply","arguments","fetchMoviesId","_ref2","_callee2","_yield$axios$get2","_context2","_x","fetchMoviesReviews","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMoviesBySearch","_ref5","_callee5","inputValue","_yield$axios$get5","_context5","query","_x4"],"sourceRoot":""}