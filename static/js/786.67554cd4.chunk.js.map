{"version":3,"file":"static/js/786.67554cd4.chunk.js","mappings":"iRAqBA,EAlB2B,SAAHA,GAA4C,IAAtCC,EAAQD,EAARC,SAAUC,EAAQF,EAARE,SAAUC,EAAUH,EAAVG,WAChD,OACEC,EAAAA,EAAAA,KAACC,EAAe,CAAAC,UACdC,EAAAA,EAAAA,MAACC,EAAU,CAACP,SAAUA,EAASK,SAAA,EAC7BF,EAAAA,EAAAA,KAACK,EAAa,CAACC,KAAK,SAAQJ,SAAC,YAE7BF,EAAAA,EAAAA,KAACO,EAAqB,CACpBD,KAAK,OACLE,YAAY,eACZC,KAAK,aACLC,MAAOX,EACPD,SAAUA,EACVa,UAAQ,QAKlB,EAGaV,EAAkBW,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mcAqB5BV,EAAaQ,EAAAA,GAAAA,KAAWG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,gKAUxBT,EAAgBO,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iSAyB7BP,GAR2BK,EAAAA,GAAAA,KAAWK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mGAQdF,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0N,0BCS3CK,EAAkBP,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0BAI5BM,EAAYR,EAAAA,GAAAA,IAAUG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,sDAKtBO,EAAaT,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iYAsBtBQ,GAAgBV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAeK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mRAiBrC,EAjIc,WACZ,IAAAU,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCzB,EAAU2B,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAgCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAArCE,EAAUD,EAAA,GAAEE,EAASF,EAAA,GAC5BG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAR,EAAAA,EAAAA,GAAAM,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MACXC,EAAQJ,EAAaK,IAAI,UAAY,IAM3CC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAO,CAAC,IAEKG,EAAe,eAAA/C,GAAAgD,EAAAA,EAAAA,GAAAC,IAAAA,MAA9B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEgCC,EAAAA,EAAAA,IAAoBX,GAAO,KAAD,EAAhDO,EAAaC,EAAAI,KACnBpB,EAAUe,GAAeC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEzBM,QAAQC,IAAGP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAEtB,kBAP6B,OAAAlD,EAAA6D,MAAC,KAADC,UAAA,KAD9B9B,EAAcY,GASdG,GACF,MACEf,EAAc,IACdI,EAAU,GAEd,GAAG,CAACQ,IAeJ,OACExC,EAAAA,EAAAA,KAAA2D,EAAAA,SAAA,CAAAzD,UACEC,EAAAA,EAAAA,MAACgB,EAAe,CAAAjB,SAAA,EACdF,EAAAA,EAAAA,KAAC4D,EAAW,CACV/D,SAbS,SAAAgE,GACfA,EAAMC,iBAIJzB,EAHGtC,EAGa,CAAEyC,MAAOzC,GAFT,CAAC,EAIrB,EAOQD,SAxCkB,SAAAiE,GACxBnC,EAAcmC,EAAEC,OAAOtD,MACzB,EAuCQX,WAAYA,KAEdC,EAAAA,EAAAA,KAACoB,EAAS,CAAAlB,UACRF,EAAAA,EAAAA,KAACqB,EAAU,CAAAnB,SACR6B,EAAWkC,KAAI,SAAAC,GAAK,OACnBlE,EAAAA,EAAAA,KAAA,MAAAE,UACEC,EAAAA,EAAAA,MAACmB,EAAa,CACZ6C,MAAO,CAAEC,KAAM9B,GACf+B,GAAIH,EAAMI,GAAGC,WAAWrE,SAAA,CAED,OAAtBgE,EAAMM,aACLxE,EAAAA,EAAAA,KAAA,OACEyE,IAAG,yFACHC,IAAKR,EAAMS,SAGb3E,EAAAA,EAAAA,KAAA,OACEyE,IAAG,GAAAG,OAnET,kCAmEwBV,EAAMM,aACxBE,IAAKR,EAAMS,SAGf3E,EAAAA,EAAAA,KAAA,KAAAE,SAAIgE,EAAMS,SACV3E,EAAAA,EAAAA,KAAA,KAAAE,SAAIgE,EAAMW,iBAjBLX,EAAMI,GAmBV,YAOnB,C,+LCpFAQ,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAgB,eAAApF,GAAAgD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAmC,EAAAC,EAAA,OAAArC,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACP4B,EAAAA,EAAAA,IAAU,qBAAsB,CACrDK,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVE,EAAAjC,EAAAI,KAJM8B,EAAID,EAAJC,KAAIlC,EAAAqC,OAAA,SAMLH,EAAKI,SAAO,wBAAAtC,EAAAQ,OAAA,GAAAV,EAAA,KACpB,kBAR4B,OAAAlD,EAAA6D,MAAA,KAAAC,UAAA,KAUhB6B,EAAa,eAAAC,GAAA5C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4C,EAAMnB,GAAE,IAAAoB,EAAAR,EAAA,OAAArC,IAAAA,MAAA,SAAA8C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EACZ4B,EAAAA,EAAAA,IAAU,UAADF,OAAWN,GAAM,CAC/Ca,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVW,EAAAC,EAAAvC,KAJM8B,EAAIQ,EAAJR,KAAIS,EAAAN,OAAA,SAMLH,GAAI,wBAAAS,EAAAnC,OAAA,GAAAiC,EAAA,KACZ,gBARyBG,GAAA,OAAAJ,EAAA/B,MAAA,KAAAC,UAAA,KAUbmC,EAAkB,eAAAC,GAAAlD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkD,EAAMzB,GAAE,IAAA0B,EAAAd,EAAA,OAAArC,IAAAA,MAAA,SAAAoD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACjB4B,EAAAA,EAAAA,IAAU,UAADF,OAAWN,EAAE,YAAY,CACvDa,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIViB,EAAAC,EAAA7C,KAJM8B,EAAIc,EAAJd,KAAIe,EAAAZ,OAAA,SAMLH,EAAKI,SAAO,wBAAAW,EAAAzC,OAAA,GAAAuC,EAAA,KACpB,gBAR8BG,GAAA,OAAAJ,EAAArC,MAAA,KAAAC,UAAA,KAUlByC,EAAe,eAAAC,GAAAxD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAwD,EAAM/B,GAAE,IAAAgC,EAAApB,EAAA,OAAArC,IAAAA,MAAA,SAAA0D,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cAAAqD,EAAArD,KAAA,EACd4B,EAAAA,EAAAA,IAAU,UAADF,OAAWN,EAAE,YAAY,CACvDa,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJU,OAIVuB,EAAAC,EAAAnD,KAJM8B,EAAIoB,EAAJpB,KAAIqB,EAAAlB,OAAA,SAMLH,EAAKsB,MAAI,wBAAAD,EAAA/C,OAAA,GAAA6C,EAAA,KACjB,gBAR2BI,GAAA,OAAAL,EAAA3C,MAAA,KAAAC,UAAA,KAUfP,EAAmB,eAAAuD,GAAA9D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA8D,EAAM5G,GAAU,IAAA6G,EAAA1B,EAAA,OAAArC,IAAAA,MAAA,SAAAgE,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,cAAA2D,EAAA3D,KAAA,EAC1B4B,EAAAA,EAAAA,IAAU,eAAgB,CAC/CK,OAAQ,CACNC,QAASL,EACTvC,MAAOzC,KAER,KAAD,EALU,OAKV6G,EAAAC,EAAAzD,KALM8B,EAAI0B,EAAJ1B,KAAI2B,EAAAxB,OAAA,SAOLH,EAAKI,SAAO,wBAAAuB,EAAArD,OAAA,GAAAmD,EAAA,KACpB,gBAT+BG,GAAA,OAAAJ,EAAAjD,MAAA,KAAAC,UAAA,I","sources":["components/MovieSearch/MovieSearch.jsx","pages/Movies.jsx","services/movies-api.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const MovieSearch = ({ onSubmit, onChange, inputValue }) => {\n  return (\n    <StyledSearchbar>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchFormBtn type=\"submit\">Search</SearchFormBtn>\n\n        <StyledSearchFormInput\n          type=\"text\"\n          placeholder=\"Search movie\"\n          name=\"inputValue\"\n          value={inputValue}\n          onChange={onChange}\n          required\n        />\n      </SearchForm>\n    </StyledSearchbar>\n  );\n};\nexport default MovieSearch;\n\nexport const StyledSearchbar = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  gap: 20px;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  font-family: monospace;\n  background-color: #f3f7fe;\n  color: #3b82f6;\n  border: none;\n  border-radius: 8px;\n  width: 100px;\n  height: 45px;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #3b82f6;\n    box-shadow: 0 0 0 5px #3b83f65f;\n    color: #fff;\n  }\n`;\n\nexport const StyledSearchFormBtnLabel = styled.span`\n  position: static;\n  width: auto;\n  height: auto;\n  padding: 0;\n  font-size: 22px;\n`;\n\nexport const StyledSearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding: 12px 12px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import MovieSearch from '../components/MovieSearch/MovieSearch';\nimport React, { useEffect, useState } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesBySearch } from 'services/movies-api';\nimport styled from 'styled-components';\nconst imgLink = 'https://image.tmdb.org/t/p/w500';\n\nconst Movie = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [moviesData, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') || '';\n\n  const updateQueryString = e => {\n    setInputValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (query) {\n      setInputValue(query);\n      async function getSearchMovies() {\n        try {\n          const moviesDataNew = await fetchMoviesBySearch(query);\n          setMovies(moviesDataNew);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      getSearchMovies();\n    } else {\n      setInputValue('');\n      setMovies([]);\n    }\n  }, [query]);\n\n  // const onSubmit = event => {\n  //   event.preventDefault();\n  //   setSearchParams({ query: inputValue });\n  // };\n  const onSubmit = event => {\n    event.preventDefault();\n    if (!inputValue) {\n      setSearchParams({});\n    } else {\n      setSearchParams({ query: inputValue });\n    }\n  };\n\n  return (\n    <>\n      <StyledContainer>\n        <MovieSearch\n          onSubmit={onSubmit}\n          onChange={updateQueryString}\n          inputValue={inputValue}\n        />\n        <StyledBox>\n          <StyledList>\n            {moviesData.map(movie => (\n              <li key={movie.id}>\n                <StyledNavLink\n                  state={{ from: location }}\n                  to={movie.id.toString()}\n                >\n                  {movie.poster_path === null ? (\n                    <img\n                      src={`https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png?20170513175923`}\n                      alt={movie.title}\n                    />\n                  ) : (\n                    <img\n                      src={`${imgLink + movie.poster_path}`}\n                      alt={movie.title}\n                    />\n                  )}\n                  <p>{movie.title}</p>\n                  <p>{movie.media_type}</p>\n                </StyledNavLink>\n              </li>\n            ))}\n          </StyledList>\n        </StyledBox>\n      </StyledContainer>\n    </>\n  );\n};\n\nconst StyledContainer = styled.div`\n  width: 100%;\n`;\n\nconst StyledBox = styled.div`\n  list-style: none;\n  padding: 40px 40px;\n`;\n\nconst StyledList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 10px;\n  li {\n    overflow: hidden;\n    display: flex;\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n\n      transition: all 0.5s ease-in-out;\n      &:hover {\n        transform: scale(1.03);\n      }\n    }\n  }\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  width: 100%;\n  padding: 30px 40px;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  margin: 0 auto;\n  &:active {\n    color: #303f9f;\n    text-decoration: underline;\n  }\n  &:hover {\n    color: #303f9f;\n    text-decoration: underline;\n  }\n`;\n\nexport default Movie;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'fde4dd89a2c817f4c4efb19732e7d4a1';\n\nexport const fetchMoviesTrend = async () => {\n  const { data } = await axios.get('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // console.log(data);\n  return data.results;\n};\n\nexport const fetchMoviesId = async id => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // console.log(data);\n  return data;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // console.log(data);\n  return data.results;\n};\n\nexport const fetchMoviesCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // console.log(data);\n  return data.cast;\n};\n\nexport const fetchMoviesBySearch = async inputValue => {\n  const { data } = await axios.get(`search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: inputValue,\n    },\n  });\n  // console.log(data);\n  return data.results;\n};\n"],"names":["_ref","onSubmit","onChange","inputValue","_jsx","StyledSearchbar","children","_jsxs","SearchForm","SearchFormBtn","type","StyledSearchFormInput","placeholder","name","value","required","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","StyledContainer","StyledBox","StyledList","StyledNavLink","NavLink","_useState","useState","_useState2","_slicedToArray","setInputValue","_useState3","_useState4","moviesData","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","query","get","useEffect","getSearchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","moviesDataNew","_context","prev","next","fetchMoviesBySearch","sent","t0","console","log","stop","apply","arguments","_Fragment","MovieSearch","event","preventDefault","e","target","map","movie","state","from","to","id","toString","poster_path","src","alt","title","concat","media_type","axios","API_KEY","fetchMoviesTrend","_yield$axios$get","data","params","api_key","abrupt","results","fetchMoviesId","_ref2","_callee2","_yield$axios$get2","_context2","_x","fetchMoviesReviews","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchMoviesCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}